name: CD Pipeline

on:
  push:
    branches: [main]

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build frontend Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/swing-frontend:latest ./frontend

    - name: Build backend Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/swing-backend:latest ./backend

    - name: Push frontend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/swing-frontend:latest

    - name: Push backend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/swing-backend:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          export COMPOSE_HTTP_TIMEOUT=600
          cd Swing
          docker-compose down
          docker-compose pull

          # Set AWS environment variables
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          export AWS_BUCKET=${{ secrets.AWS_BUCKET }}
          
          # Set Google Maps API environment variables
          export NEXT_PUBLIC_GEOCODING_API_KEY=${{ secrets.NEXT_PUBLIC_GEOCODING_API_KEY }}
          export NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
          export NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID }}
          
          # 起動ログを確認するために各コンテナを順次起動
          docker-compose up -d db
          docker-compose logs db

          docker-compose up -d redis
          docker-compose logs redis

          docker-compose up -d backend
          docker-compose logs backend

          docker-compose up -d frontend
          docker-compose logs frontend
          
          docker-compose up -d nginx
          docker-compose logs nginx
