services:
  frontend:
    build: ./frontend
    ports:
      - '8000:8000'
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:4000/api/v1
      - NEXT_PUBLIC_GEOCODING_API_KEY=${NEXT_PUBLIC_GEOCODING_API_KEY}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      - NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID=${NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID}
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - dev-net

  backend:
    build: ./backend
    ports:
      - '4000:4000'
    environment:
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - RAILS_ENV=development
    env_file:
      - .env.development
    command: bash -c "rails server -b '0.0.0.0' -p 4000"
    volumes:
      - ./backend:/app
    networks:
      - dev-net

  nginx:
    image: nginx:1.26.1
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '80:80'
    depends_on:
      - frontend
      - backend
    networks:
      - dev-net

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_TEST_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - "dev-db-data:/var/lib/mysql"
      - "./docker/swing_test/my.cnf:/etc/mysql/conf.d/my.cnf"
    networks:
      - dev-net

  redis:
    image: redis:7.2.5
    ports:
      - "6379:6379"
    volumes:
      - "./docker/redis/data:/data"
    networks:
      - dev-net

networks:
  dev-net:

volumes:
  dev-db-data:
