version: '3.8'
services:
  frontend:
    image: rem0930/frontend:latest
    ports:
      - '8000:8000'
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - backend
    networks:
      - swing-net

  backend:
    image: rem0930/backend:latest
    expose:
      - '3000'
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - RAILS_ENV=${RAILS_ENV}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    depends_on:
      - db
      - redis
    networks:
      - swing-net

  nginx:
    image: nginx:1.26.1
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/swi-ng.com/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/swi-ng.com/privkey.pem:/etc/nginx/ssl/privkey.pem
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/nginx/ssl/options-ssl-nginx.conf
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/nginx/ssl/ssl-dhparams.pem
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - frontend
      - backend
    networks:
      - swing-net

  db:
    image: mysql:8.0
    expose:
      - '3306'
    volumes:
      - db-data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      - MYSQL_HOST: db
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - swing-net

  redis:
    image: redis:7.2.5
    expose:
      - '6379'
    volumes:
      - redis-data:/data
    networks:
      - swing-net

networks:
  swing-net:

volumes:
  db-data:
  redis-data:
