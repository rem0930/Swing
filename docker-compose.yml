services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - '8000:8000'
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=https://swi-ng.com/api
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - NEXT_PUBLIC_GEOCODING_API_KEY=${NEXT_PUBLIC_GEOCODING_API_KEY}
      - NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      - NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID=${NEXT_PUBLIC_GOOGLE_MAPS_MAP_ID}
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - swing-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    expose:
      - '3000'
    depends_on:
      - db
      - redis
    environment:
      - RAILS_ENV=production
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    env_file:
      - .env
    command: bash -c "rm -f /app/tmp/pids/server.pid && cron && rails server -b '0.0.0.0' -p 3000"
    volumes:
      - ./backend:/app
    networks:
      - swing-net

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/swi-ng.com/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/swi-ng.com/privkey.pem:/etc/nginx/ssl/privkey.pem
      - /etc/letsencrypt/options-ssl-nginx.conf:/etc/nginx/ssl/options-ssl-nginx.conf
      - /etc/letsencrypt/ssl-dhparams.pem:/etc/nginx/ssl/ssl-dhparams.pem
    ports:
      - '80:80'
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - swing-net

  db:
    image: mysql:8.0
    expose:
      - '3306'
    volumes:
      - "db-data:/var/lib/mysql"
      - "./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf"
    environment:
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    - MYSQL_DATABASE=${MYSQL_DATABASE}
    - MYSQL_USER=${MYSQL_USER}
    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - swing-net

  redis:
    image: redis:7.2.5
    expose:
      - '6379'
    volumes:
      - "./docker/redis/data:/data"
    networks:
      - swing-net

networks:
  swing-net:

volumes:
  db-data:
  redis-data:
